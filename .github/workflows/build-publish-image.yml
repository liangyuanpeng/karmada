name: build image
on:
  workflow_call:
    inputs:
      username:
        description: "username"
        required: true
        default: ""
        type: string
      password:
        description: "password"
        required: true
        default: ""
        type: string
      registry:
        description: "registry"
        required: true
        default: ""
        type: string
      registryServerAddress:
        description: "registryServerAddress"
        required: false
        default: "docker.io/karmada"
        type: string
      imageTag:
        description: "imageTag"
        required: false
        default: "latest"
        type: string
      signImage:
        description: "signImage"
        required: false
        default: 1
        type: number

jobs:
  build-publish-image:
    name: build and publish image
    permissions:
      id-token: write # To be able to get OIDC ID token to sign images.
    # prevent job running from forked repository, otherwise
    # 1. running on the forked repository would fail as missing necessary secret.
    # 2. running on the forked repository would use unnecessary GitHub Action time.
    strategy:
      matrix:
        target:
          - karmada-controller-manager
          - karmada-scheduler
          - karmada-descheduler
          - karmada-webhook
          - karmada-agent
          - karmada-scheduler-estimator
          - karmada-interpreter-webhook-example
          - karmada-aggregated-apiserver
          - karmada-search
          - karmada-operator
          - karmada-metrics-adapter
    runs-on: ubuntu-22.04
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          # fetch-depth:
          # 0 indicates all history for all branches and tags.
          # for `git describe --tags` in Makefile.
          fetch-depth: 0
      - name: install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.8
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.4.0
        with:
          cosign-release: 'v2.2.3'
      - name: install QEMU
        uses: docker/setup-qemu-action@v2
      - name: install Buildx
        uses: docker/setup-buildx-action@v2
      - name: login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ inputs.username }}
          password: ${{ inputs.password }}
      - name: build and publish images
        env:
          REGISTRY: ${{ inputs.registry }}
          VERSION: ${{ inputs.imageTag }}
          REGISTRY_SERVER_ADDRESS: ${{ inputs.registryServerAddress }}
          COSIGN_EXPERIMENTAL: 1
          SIGN_IMAGE: 1
        run: make mp-image-${{ matrix.target }}
