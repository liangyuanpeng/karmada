name: CLI
on:
  # Run this workflow every time a new commit pushed to upstream/fork repository.
  # Run workflow on fork repository will help contributors find and resolve issues before sending a PR.
  push:
  pull_request:
# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.actor }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  init:
    name: init
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: false
      matrix:
        # Here support the latest three minor releases of Kubernetes, this can be considered to be roughly
        # the same as the End of Life of the Kubernetes release: https://kubernetes.io/releases/
        # Please remember to update the CI Schedule Workflow when we add a new version.
        k8s: [ v1.27.3, v1.28.0, v1.29.0 ]
        extraEtcdVersion: [ "3.5.9-0", "" ]
    steps:
      - name: checkout code
        uses: actions/checkout@v3
        with:
          # Number of commits to fetch. 0 indicates all history for all branches and tags.
          # We need to guess version via git tags.
          fetch-depth: 0
      - name: install Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.21.8
      - uses: helm/kind-action@v1.9.0
        with:
          version: "v0.20.0"
      - name: run karmadactl init test
        run: |
          export CLUSTER_VERSION=kindest/node:${{ matrix.k8s }}

          export KARMADACTL_INIT_EXTRA_OPTS=${KARMADACTL_INIT_EXTRA_OPTS:-""}

          if [ ${{ matrix.extraEtcdVersion }} != "none" ];then 
            docker run -p 2379:2379 -it -d --name etcd  registry.k8s.io/etcd:${{ matrix.extraEtcdVersion }}  etcd --data-dir /var/lib/etcd --experimental-watch-progress-notify-interval 1m --listen-client-urls http://0.0.0.0:2379 --advertise-client-urls http://0.0.0.0:2379
            export CNODE=`hostname`
            KARMADACTL_INIT_EXTRA_OPTS=--external-etcd-servers=http://$CNODE:2379
          fi

          # init e2e environment
          hack/cli-testing-environment.sh

          # run a single e2e
          export KUBECONFIG=${HOME}/karmada/karmada-apiserver.config
          GO111MODULE=on go install github.com/onsi/ginkgo/v2/ginkgo
          ginkgo -v --race --trace -p  --focus="[BasicPropagation] propagation testing deployment propagation testing"  ./test/e2e/
      - name: check
        if: ${{ matrix.extraEtcdVersion != '' }} 
        run: |
          kubectl --kubeconfig ~/.kube/karmada-host.config get pod -A -owide
          
          # would not deploy etcd when useing extra etcd.
          KARMADA_ETCD_STS_COUNT=`kubectl --kubeconfig ~/.kube/karmada-host.config get sts -n karmada-system -l karmada.io/bootstrapping=app-defaults  -ojson | jq '.items | length'`
          echo "KARMADA_ETCD_STS_COUNT:"$KARMADA_ETCD_STS_COUNT
          if [ $KARMADA_ETCD_STS_COUNT -ne 0 ];then
            exit -1
          fi
      - uses: chainguard-dev/actions/kind-diag@main
        # Only upload logs on failure.
        if: ${{ failure() }}
        with:
          cluster-resources: nodes,namespaces,
          namespace-resources: configmaps,pods,svc
          artifact-name: logs-${{ matrix.k8s}}

